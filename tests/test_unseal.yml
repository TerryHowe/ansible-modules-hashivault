---
- hosts: localhost
  gather_facts: no
  vars:
    vault_keys:  "{{ lookup('env','VAULT_KEYS') }}"
  tasks:
    - assert:
        that: "'{{vault_keys}}' != ''"
        msg: "VAULT_KEYS must be set to run this test"
    - name: Get status of vault before unseal
      hashivault_status:
      register: 'vault_status'

    - block:
        - name: Vault is not sealed so seal it
          hashivault_seal:
          register: 'vault_seal'
        - assert: { that: "{{vault_seal.changed}} == True" }
        - assert: { that: "{{vault_seal.rc}} == 0" }
      when: "vault_status.status.sealed == False"

    - name: Seal the vault but it is already sealed
      hashivault_seal:
      register: 'vault_seal_st'
    - assert: { that: "{{vault_seal_st.changed}} == False" }
    - assert: { that: "{{vault_seal_st.rc}} == 0" }

    - name: Unseal the vault
      hashivault_unseal:
        keys: '{{vault_keys}}'
      register: 'vault_unseal'
    - assert: { that: "{{vault_unseal.changed}} == True" }
    - assert: { that: "{{vault_unseal.status.progress}} == 0" }
    - assert: { that: "{{vault_unseal.status.sealed}} == False" }
    - assert: { that: "{{vault_unseal.rc}} == 0" }

    - name: Unseal the vault but it is not sealed
      hashivault_unseal:
        keys: '{{vault_keys}}'
      register: 'vault_unseal_st'
    - assert: { that: "{{vault_unseal_st.changed}} == False" }
    - assert: { that: "{{vault_unseal_st.rc}} == 0" }
