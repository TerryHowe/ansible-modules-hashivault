#
# This test depends on successful test_write run
#
---
- hosts: localhost
  gather_facts: no
  vars:
    namespace: ''
    name_root: '{{namespace}}basic'
    name_folder: '{{namespace}}stalks/bean'
    name_dict: '{{namespace}}_dict'
    name_array: '{{namespace}}_array'
    vars_foo: "{{lookup('terryhowe.hashivault.hashivault', '{{name_root}}', 'foo')}}"
    dict_value:
      foo: 'bar'
      baz: 'stuff'
    array_value:
      - 'one'
      - 'two'
      - 'three'
  tasks:
    - assert: { that: "'{{vars_foo}}' == 'new'" }

    - set_fact:
        a_set_fie: "{{lookup('terryhowe.hashivault.hashivault', '{{name_root}}', 'fie')}}"
    - assert: { that: "'{{a_set_fie}}' == 'fum'" }

    - set_fact:
        a_set_fie: "{{lookup('terryhowe.hashivault.hashivault', '{{name_folder}}', 'height')}}"
    - assert: { that: "'{{a_set_fie}}' == 'tall'" }

    - set_fact:
        a_set_dict: "{{lookup('terryhowe.hashivault.hashivault', '{{name_dict}}', 'foo')}}"
    - assert: { that: "'{{a_set_dict}}' == 'bar'" }

    - set_fact:
        a_set_array: "{{lookup('terryhowe.hashivault.hashivault', '{{name_array}}', 'value') | first}}"
    - assert: { that: "'{{a_set_array}}' == 'one'" }

    - set_fact:
        a_set_dict_all: "{{lookup('terryhowe.hashivault.hashivault', '{{name_dict}}')}}"
    - assert: { that: "a_set_dict_all == dict_value" }

    - set_fact:
        a_set_array_all: "{{lookup('terryhowe.hashivault.hashivault', '{{name_array}}')['value']}}"
    - assert: { that: "a_set_array_all == array_value" }

    - set_fact:
        looky_secret: "{{lookup('terryhowe.hashivault.hashivault', '{{namespace}}fourofour/notfound', 'value', default='noob')}}"
    - assert: { that: "'{{looky_secret}}' == 'noob'" }

    - set_fact:
        looky_secret: "{{lookup('terryhowe.hashivault.hashivault', '{{name_root}}', 'fie', url='http://bogus', errors='ignore')}}"
    - assert: { that: "'{{looky_secret}}' == ''" }
