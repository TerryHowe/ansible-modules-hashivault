---
- hosts: localhost
  gather_facts: no
  tasks:
    - name: create role check_mode exists
      hashivault_approle_role:
        name: testrole
        token_policies:
          - approle_test_policy
        state: present
      check_mode: true
      register: 'vault_role_create'
    - assert: { that: "{{vault_role_create.changed}} == False" }
    - assert: { that: "{{vault_role_create.rc}} == 0" }

    - name: create role check_mode does not exist
      hashivault_approle_role:
        name: testrole_two
        token_policies:
          - approle_test_policy
        state: present
      check_mode: true
      register: 'vault_role_create'
    - assert: { that: "{{vault_role_create.changed}} == True" }
    - assert: { that: "{{vault_role_create.rc}} == 0" }

    - name: delete role check_mode exists
      hashivault_approle_role:
        name: testrole
        state: absent
      check_mode: true
      register: 'vault_role_create'
    - assert: { that: "{{vault_role_create.changed}} == True" }
    - assert: { that: "{{vault_role_create.rc}} == 0" }

    - name: delete role check_mode does not exist
      hashivault_approle_role:
        name: testrole_two
        state: absent
      check_mode: true
      register: 'vault_role_create'
    - assert: { that: "{{vault_role_create.changed}} == False" }
    - assert: { that: "{{vault_role_create.rc}} == 0" }

    - name: create secret for check_mode test
      hashivault_approle_role_secret:
        name: testrole
        state: present
      register: 'vault_role_secret_create'
    - set_fact:
        approle_secret_id: "{{vault_role_secret_create.data.secret_id}}"
    - set_fact:
        approle_secret_id_accessor: "{{vault_role_secret_create.data.secret_id_accessor}}"

    - name: delete secret exists check_mode
      hashivault_approle_role_secret:
        name: testrole
        secret: "{{approle_secret_id}}"
        state: absent
      check_mode: true
      register: 'vault_role_secret_delete'
    - assert: { that: "{{vault_role_secret_delete.changed}} == True" }
    - assert: { that: "{{vault_role_secret_delete.rc}} == 0" }

    - name: delete secret does not exist check_mode
      hashivault_approle_role_secret:
        name: testrole_two
        secret: "{{approle_secret_id}}"
        state: absent
      check_mode: true
      register: 'vault_role_secret_delete'
    - assert: { that: "{{vault_role_secret_delete.changed}} == False" }
    - assert: { that: "{{vault_role_secret_delete.rc}} == 0" }
