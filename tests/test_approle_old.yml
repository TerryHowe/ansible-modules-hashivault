---
- hosts: localhost
  gather_facts: no
  tasks:
    - name: create role
      hashivault_approle_role_create:
        name: casserole
        policies:
          - approle_test_policy
      register: 'vault_role_create'
    - assert: { that: "{{vault_role_create.changed}} == True" }
    - assert: { that: "{{vault_role_create.rc}} == 0" }

    - name: list roles
      hashivault_approle_role_list:
      register: 'vault_role_list'
    - assert: { that: "{{vault_role_list.changed}} == False" }
    - assert: { that: "{{vault_role_list.rc}} == 0" }
    - fail: msg="role casserole not in list {{vault_role_list.roles}}"
      when: '"casserole" not in vault_role_list.roles'

    - name: create role secret id
      hashivault_approle_role_secret_create:
        name: casserole
      register: 'vault_role_secret_create'
    - assert: { that: "{{vault_role_secret_create.changed}} == False" }
    - assert: { that: "{{vault_role_secret_create.rc}} == 0" }
    - assert:
        that:
          - vault_role_secret_create.secret_id_accessor|default('') != ''
          - vault_role_secret_create.secret_id|default('') != ''
    - set_fact:
        approle_secret_id: "{{vault_role_secret_create.secret_id}}"
    - set_fact:
        approle_secret_id_accessor: "{{vault_role_secret_create.secret_id_accessor}}"

    - name: list secrets
      hashivault_approle_role_secret_list:
        name: casserole
      register: 'vault_role_secret_list'
    - assert: { that: "{{vault_role_secret_list.changed}} == False" }
    - assert: { that: "{{vault_role_secret_list.rc}} == 0" }
    - fail: msg="secret {{approle_secret_id_accessor}} not in list"
      when: approle_secret_id_accessor not in vault_role_secret_list.secrets

    - name: delete secret
      hashivault_approle_role_secret_delete:
        name: casserole
        secret: "{{approle_secret_id}}"
      register: 'vault_role_secret_delete'
    - assert: { that: "{{vault_role_secret_delete.changed}} == True" }
    - assert: { that: "{{vault_role_secret_delete.rc}} == 0" }

    - name: make sure secret is gone
      hashivault_approle_role_secret_list:
        name: casserole
      register: 'vault_role_secret_list'
    - assert: { that: "{{vault_role_secret_list.changed}} == False" }
    - assert: { that: "{{vault_role_secret_list.rc}} == 0" }
    - fail: msg="secret {{approle_secret_id_accessor}} shoud not be in list"
      when: approle_secret_id_accessor in vault_role_secret_list.secrets