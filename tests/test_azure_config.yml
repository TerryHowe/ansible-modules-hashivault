---

- hosts: localhost
  gather_facts: no
  vars:
    subscription_id: test
    client_id: values
    client_secret: dont
    tenant_id: matter
  tasks:
    - hashivault_secret_disable:
        name: azure
      failed_when: false
         
    - name: make sure test fails when no mount exists
      hashivault_azure_secret_engine_config:
        subscription_id: "{{ subscription_id }}"
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        tenant_id: "{{ tenant_id }}"
      register: fail_config
      failed_when: false

    - assert: { that: "{{ fail_config.changed }} == False" }
    
    - hashivault_secret_enable:
        name: azure
        backend: azure
         
    - name: successfully enable mount
      hashivault_azure_secret_engine_config:
        subscription_id: "{{ subscription_id }}"
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        tenant_id: "{{ tenant_id }}"
      register: success_config
    
    - assert: { that: "{{ success_config.changed }} == True" }

    - name: attempt 2nd config with same values
      hashivault_azure_secret_engine_config:
        subscription_id: "{{ subscription_id }}"
        client_id: "{{ client_id }}"
        client_secret: "{{ client_secret }}"
        tenant_id: "{{ tenant_id }}"
      register: idem_config
    
    - assert: { that: "{{ idem_config.changed }} == False" }

    - name: attempt 3rd config with different values
      hashivault_azure_secret_engine_config:
        subscription_id: blergh
        client_id: flergh
        client_secret: mlergh
        tenant_id: splurgh
      register: overwrite_config
    
    - assert: { that: "{{ overwrite_config.changed }} == True" }