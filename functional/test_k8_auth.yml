---
- hosts: localhost
  gather_facts: no
  tasks:
    - hashivault_auth_method:
        method_type: kubernetes
        state: disabled
      failed_when: false

    - name: enable azure secret engine
      hashivault_auth_method:
        method_type: kubernetes

    - name: create config
      register: k8s_module
      hashivault_k8s_auth_config:
        kubernetes_host: http://127.0.0.1:8443
        kubernetes_ca_cert: "{{ lookup('file', './cacert.pem') }}"
        token_reviewer_jwt: "{{ lookup('file', './jwt.jws') }}"
    - assert: { that: "k8s_module is changed" }
    - assert: { that: "k8s_module.rc == 0" }

    - name: idempotent create config
      register: k8s_module
      hashivault_k8s_auth_config:
        kubernetes_host: http://127.0.0.1:8443
        kubernetes_ca_cert: "{{ lookup('file', './cacert.pem') }}"
        token_reviewer_jwt: "{{ lookup('file', './jwt.jws') }}"
    - assert: { that: "k8s_module is not changed" }
    - assert: { that: "k8s_module.rc == 0" }

    - name: update config
      register: k8s_module
      hashivault_k8s_auth_config:
        kubernetes_host: http://127.0.0.2:8443
        kubernetes_ca_cert: "{{ lookup('file', './cacert.pem') }}"
        token_reviewer_jwt: "{{ lookup('file', './jwt.jws') }}"
        # issuer: bob hvac 0.10.2
    - assert: { that: "k8s_module is changed" }
    - assert: { that: "k8s_module.rc == 0" }

    - name: create role delete
      hashivault_k8s_auth_role:
        name: "testk8srole"
        state: absent

    - name: create role
      hashivault_k8s_auth_role:
        name: "testk8srole"
        policies: ["test", "test2"]
        bound_service_account_names: ["vault-auth"]
        bound_service_account_namespaces: ["default", "some-app"]
        token_type: service
      register: k8s_module
    - assert: { that: "k8s_module is changed" }
    - assert: { that: "k8s_module.rc == 0" }

    - name: read role
      hashivault_read:
        secret: "kubernetes/role/testk8srole"
        mount_point: "auth"
      register: k8s_module
    - assert:
        that:
          - k8s_module.value.policies|sort == ["test","test2"]|sort
          - k8s_module.value.bound_service_account_names|sort == ["vault-auth"]|sort
          - k8s_module.value.bound_service_account_namespaces|sort == ["some-app","default"]|sort
          - k8s_module.value.token_type == 'service'
    - assert: { that: "k8s_module.rc == 0" }

    - name: create role idempotent
      hashivault_k8s_auth_role:
        name: "testk8srole"
        policies: ["test", "test2"]
        bound_service_account_names: ["vault-auth"]
        bound_service_account_namespaces: ["default", "some-app"]
        token_type: service
      register: k8s_module
    - assert: { that: "k8s_module is not changed" }
    - assert: { that: "k8s_module.rc == 0" }

    - name: create role delete
      hashivault_k8s_auth_role:
        name: "testk8srole"
        state: absent
      register: k8s_module
    - assert: { that: "k8s_module is changed" }
    - assert: { that: "k8s_module.rc == 0" }
