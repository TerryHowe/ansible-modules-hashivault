---
- hosts: localhost
  gather_facts: no
  vars:
    admin_name: 'notroot'
    admin_rules: >
        path "secret/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
        } 
        path "auth/token/create*" {
          capabilities = ["create", "read", "update", "delete", "list", "sudo"]
        } 
        path "auth/token/lookup*" {
          capabilities = ["read", "list"]
        } 
        path "auth/token/lookup/*" {
          capabilities = ["read", "list"]
        } 
        path "sys/policy" {
          capabilities = ["read"]
        } 
        path "sys/policy/*" {
          capabilities = ["create", "read", "update", "delete", "list"]
        } 
    readonly_name: 'readonly'
    readonly_rules: >
        path "secret/test-readonly*" {
          policy = "read"
        } 
    vault_root_token: "{{lookup('env','VAULT_TOKEN')}}"
  tasks:
    - name: "Create a policy (with sudo, so we don't have to use the root token)"
      hashivault_policy_set:
        name: "{{admin_name}}"
        rules: "{{admin_rules}}"
        token: "{{vault_root_token}}"
      register: 'vault_policy_set'
    - assert:
        that:
          - "{{vault_policy_set.changed}} == True"
          - "{{vault_policy_set.rc}} == 0"

    - name: "Create a {{admin_name}} token, so we can stop using root token"
      hashivault_token_create:
        display_name: "{{admin_name}}"
        policies: ["{{admin_name}}"]
        renewable: True
        token: "{{vault_root_token}}"
      register: "vault_token_admin"
    - assert:
        that:
          - "{{vault_token_admin.changed}} == True"
          - "{{vault_token_admin.rc}} == 0"

    - name: "Create a read-only policy"
      hashivault_policy_set:
        name: "{{readonly_name}}"
        rules: "{{readonly_rules}}"
        token: "{{vault_token_admin['token']['auth']['client_token']}}"
      register: 'vault_policy_set'
    - assert:
        that:
          - "{{vault_policy_set.changed}} == True"
          - "{{vault_policy_set.rc}} == 0"

    - name: "List the policies"
      hashivault_policy_list:
        token: "{{vault_token_admin['token']['auth']['client_token']}}"
      register: 'vault_policy_list'
    - assert:
        that:
          - "{{vault_policy_list.changed}} == False"
          - "{{vault_policy_list.rc}} == 0"

    - name: "Create a {{readonly_name}} token"
      hashivault_token_create:
        display_name: "{{readonly_name}}"
        policies: ["{{readonly_name}}"]
        no_default_policy: True
        orphan: True
        token: "{{vault_token_admin['token']['auth']['client_token']}}"
      register: "vault_token_readonly"
    - assert:
        that:
          - "{{vault_token_readonly.changed}} == True"
          - "{{vault_token_readonly.rc}} == 0"

    - name: "Lookup with root token"
      hashivault_token_lookup:
        lookup_token: "{{vault_token_admin['token']['auth']['client_token']}}"
      register: "vault_token_lookup"
    - assert:
        that:
          - "{{vault_token_lookup.changed}} == False"
          - "{{vault_token_lookup.rc}} == 0"

    - name: "Lookup with {{readonly_name}} token"
      hashivault_token_lookup:
        token: "{{vault_token_admin['token']['auth']['client_token']}}"
      register: "vault_token_lookup"
    - assert:
        that:
          - "{{vault_token_lookup.changed}} == False"
          - "{{vault_token_lookup.rc}} == 0"
